extends layout
block content

    h1 'Video!'

    script.

        function hasGetUserMedia() {
            return !!(navigator.mediaDevices.getUserMedia);
            //return !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
        }

        if (hasGetUserMedia()) {
            // Good to go!
        } else {
        alert('getUserMedia() is not supported in your browser');
        }

    video( autoplay = 'autoplay')


    script.
        //Run stuff.
        if(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices){
            navigator.mediaDevices.enumerateDevices().then(selectSourceAndStart).catch(function(err) {
                console.log(err.name + ": " + err.message);
            });
        }else if(MediaStreamTrack.getSources){
            MediaStreamTrack.getSources(selectSourceAndStart);
        }

        function selectSourceAndStart(sources){
            var videoSource = null;

            for (var i = 0; i != sources.length; ++i) {
                var source = sources[i];
                if (source.kind === 'video' || source.kind === 'videoinput') {
                  console.log(source.id || source.deviceId, source.label || 'camera');

                  videoSource = source.id || source.deviceId;
                } else {
                  console.log('Some other kind of source: ', source);
                }
            }

            startVideo(videoSource);
        }

        function startVideo(videoSource) {
          var constraints = {
            video: {
              optional: [{sourceId: videoSource}]
            }
          };

          navigator.mediaDevices.getUserMedia(constraints).then(successCallback).catch(errorCallback);
        }

        var errorCallback = function(e) {
            console.log('Reeeejected!', e);
        };

        function successCallback(stream) {
            var video = document.querySelector('video');
            video.src = window.URL.createObjectURL(stream);
        }